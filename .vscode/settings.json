{
    "code-runner.executorMap": {
        "javascript": "node",

        // 실행 파일 무조건 안전하게 삭제
        // trap "rm -f ..." EXIT;는 스크립트가 정상 종료되든 중단(ctrl+c 같은 작업)되든 간에 EXIT 시그널에 의해 실행됨
        "java": "cd $dir && javac \"$fileName\" -d . && (trap 'rm -f tempCodeRunnerFile.class' EXIT; java tempCodeRunnerFile)",
        "c": "cd $dir && gcc \"$fileName\" -o tempCodeRunnerFile && (trap 'rm -f tempCodeRunnerFile' EXIT; ./tempCodeRunnerFile)",
        "cpp": "cd $dir && clang++ -std=c++17 \"$fileName\" -o tempCodeRunnerFile && (trap 'rm -f tempCodeRunnerFile' EXIT; ./tempCodeRunnerFile)",

        "python": "python3",
        "ruby": "ruby",
        "spim": "spim -file \"$fileName\""
    },

    "code-runner.preserveFocus": false,  // 파일 실행해도 실행 텍스트 포커스 유지하는 옵션
    "code-runner.saveFileBeforeRun": true,  // 실행버튼 누르면 자동으로 저장하고 실행하는 옵션
    "code-runner.runInTerminal": true,  // 터미널에서 실행하는 옵션 (이걸 켜야 입력 가능)

    "cmake.configureOnOpen": true,
    "code-runner.ignoreSelection": true,
    "files.associations": {
        "*.scm": "racket",
        "iostream": "cpp",
        "__bit_reference": "cpp",
        "ios": "cpp",
        "regex": "cpp",
        "queue": "cpp",
        "vector": "cpp",
        "deque": "cpp",
        "forward_list": "cpp",
        "list": "cpp",
        "string": "cpp",
        "valarray": "cpp",
        "tuple": "cpp",
        "__hash_table": "cpp",
        "__split_buffer": "cpp",
        "__tree": "cpp",
        "array": "cpp",
        "initializer_list": "cpp",
        "map": "cpp",
        "set": "cpp",
        "string_view": "cpp",
        "unordered_map": "cpp",
        "unordered_set": "cpp"
    },

    
    // 윈도우용 (윈도우에서도 같은 폴더를 USB나 Cloud로 공유해서 쓴다면 해놓자.)
    // "C_Cpp.default.compilerPath": "C:\\MinGW\\bin\\g++.exe",
}